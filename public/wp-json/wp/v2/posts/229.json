{"id":229,"date":"2017-09-29T23:56:46","date_gmt":"2017-09-29T23:56:46","guid":{"rendered":"http:\/\/zachbrogan.com\/?p=229"},"modified":"2018-03-24T02:57:36","modified_gmt":"2018-03-24T02:57:36","slug":"hvac-controller","status":"publish","type":"post","link":"https:\/\/zachbrogan.com\/byu-iot-lab\/hvac-controller\/","title":{"rendered":"HVAC Controller"},"content":{"rendered":"<h2>Part of a Better IoT Thermostat<\/h2>\n<h3>Summary<\/h3>\n<div id=\"attachment_230\" style=\"width: 381px\" class=\"wp-caption alignright\"><img aria-describedby=\"caption-attachment-230\" loading=\"lazy\" class=\"wp-image-230\" src=\"http:\/\/zachbrogan.com\/wp-content\/uploads\/2017\/09\/IMG_0633-e1506729282406-225x300.jpg\" alt=\"HVAC Flow Chart\" width=\"371\" height=\"495\" srcset=\"https:\/\/zachbrogan.com\/wp-content\/uploads\/2017\/09\/IMG_0633-e1506729282406-225x300.jpg 225w, https:\/\/zachbrogan.com\/wp-content\/uploads\/2017\/09\/IMG_0633-e1506729282406-768x1024.jpg 768w\" sizes=\"(max-width: 371px) 100vw, 371px\" \/><p id=\"caption-attachment-230\" class=\"wp-caption-text\">An Early Rendition HVAC Controller Block Diagram<\/p><\/div>\n<p>My research has involved building a wifi-controlled HVAC\u00a0(heating, ventilation, and air conditioning) controller with a web API. This facilitates the creation of a practical and affordable IoT thermostat.<\/p>\n<p><strong>Hardware<\/strong>: An <a href=\"https:\/\/en.wikipedia.org\/wiki\/ESP8266\">ESP8266,\u00a0<\/a>3 <a href=\"https:\/\/www.digikey.com\/product-detail\/en\/vishay-semiconductor-opto-division\/VO14642AT\/VO14642AT-ND\/4074374\">solid-state relays<\/a>, power source, terminal blocks<br \/>\n<strong>Software<\/strong>: Arduino (C++)<br \/>\n<strong>Web API<\/strong>: AWS API Gateway, Lambda(Python), and DynamoDB<\/p>\n<h3>Background<\/h3>\n<p>I began working for <a href=\"http:\/\/kelly.flanagan.io\/\">Dr. Flanagan<\/a>\u00a0in October 2016 doing research in the area of the Internet of Things (IoT). Prior to joining the IoT Lab, there had been significant work on on a smart doorbell project. More information on that <a href=\"http:\/\/kelly.flanagan.io\/api\/mydoorbell-a-learning-adventure\/\">here<\/a> and <a href=\"http:\/\/tavanaalailima.com\/nfc-iot-project\/\">here<\/a>.<\/p>\n<p>I was given a parallel project to make a simple and secure HVAC Controller, the core component of a thermostat. A traditional thermostat can be divided into 4 main subsystems:<\/p>\n<ol>\n<li>HVAC Controller: Circuitry to switch Heater, Fan, and AC on and off.<\/li>\n<li>Temperature Sensor<\/li>\n<li>Temperature Set Point: Usually a display with buttons to set the desired temperature.<\/li>\n<li>Thermostat: The logic that controls the HVAC controller to achieve the correct temperature.<\/li>\n<\/ol>\n<p>The model for our IoT Thermostat is based off this, but with some key differences. 1)\u00a0Each subsystem is separate, 2) The HVAC controller and temperature sensor are physical devices, but also have equivalent virtual devices represented by the API, and 3)\u00a0The thermostat logic and temperature set point are strictly software components.<\/p>\n<h5><strong>Why is this a better IoT Thermostat?<\/strong><\/h5>\n<p>What makes this better than an existing smart thermostat like Nest&#8217;s or Honeywell&#8217;s?<\/p>\n<p><strong>Modularity<\/strong><br \/>\nHaving separate subcomponents that communicate over their REST APIs allows each to exist independently, and be changed and swapped out as needed. For example, I could buy a temperature sensor from company X with its own temperature API, an hvac controller from company Y with its own API for heating and cooling, and combine them over HTTP with my own thermostat API. Any of those APIs could even be connected to other APIs (Google calendar, Amazon Alexa, etc)<\/p>\n<p><strong>Privacy and Security<\/strong><br \/>\nOur IoT Thermostat model promotes the idea of a <a href=\"http:\/\/kelly.flanagan.io\/higher-education\/domains-personal-apis-and-portfolios\/\">Personal API<\/a>. Instead of giving all of your data to a large company like Google, you keep your own data.<\/p>\n<p><strong>Cost<\/strong><br \/>\nKeeping the temperature set point and thermostat logic virtual greatly simplify the physical hardware; only a simple HVAC controller and temperature sensor are needed. Our design has the potential to be much cheaper than any commercially available smart thermostat.<\/p>\n<h3>HVAC Controller<\/h3>\n<p>I was specifically tasked with creating the HVAC controller, its software, and its associated API. The purpose of this subsystem is to control the heater, fan, and ac in a home. If you look at typical thermostat wiring, there are 5 wires:<\/p>\n<p>Red &#8211; 24 VAC<a href=\"http:\/\/zachbrogan.com\/byu-iot-lab\/hvac-controller\/attachment\/nest-thermostat-wiring-diagram-en-us\/\" rel=\"attachment wp-att-265\"><img loading=\"lazy\" src=\"http:\/\/zachbrogan.com\/wp-content\/uploads\/2017\/09\/nest-thermostat-wiring-diagram-en-us-300x182.png\" alt=\"\" width=\"368\" height=\"223\" class=\" wp-image-265 alignright\" srcset=\"https:\/\/zachbrogan.com\/wp-content\/uploads\/2017\/09\/nest-thermostat-wiring-diagram-en-us-300x182.png 300w, https:\/\/zachbrogan.com\/wp-content\/uploads\/2017\/09\/nest-thermostat-wiring-diagram-en-us.png 700w\" sizes=\"(max-width: 368px) 100vw, 368px\" \/><\/a><\/p>\n<p>Black\/Blue &#8211; Common (opposite phase 24 VAC)<\/p>\n<p>White &#8211; Heater<\/p>\n<p>Yellow &#8211; AC<\/p>\n<p>Green &#8211; Fan<\/p>\n<p>The heater, ac, and fan are powered on when their respective wires have a connection to the 24 VAC wire. You can simulate the role of a thermostat\/hvac controller by, for example, connecting the heater wire to the red power wire to turn the heater on. The thermostat does this by using relays to switch the connections to the red wire on and off.<\/p>\n<h4>Hvac Hardware<\/h4>\n<p>I decided to build the hvac controller using the ESP8266 board because it is extremely inexpensive, WiFi capable, widely-used for IoT projects, and Arduino-compatible, making it fairly simple to program. One advantage of the solid state relays used in this project is that they are directly connected to the GPIO pins of the ESP board. Traditional relays often require additional circuitry because of the higher current requirements. Terminal blocks allow the thicker hvac wires to connect to the board. The power system currently being used is the power board for the doorbell project mentioned earlier, however, I swapped out a couple capacitors due to the 24 VAC transformer used in HVAC systems versus the 16 &#8211; 20ish VAC doorbell transformers. The design for the power supply will likely change in the future.<a href=\"http:\/\/zachbrogan.com\/byu-iot-lab\/hvac-controller\/attachment\/img_2336\/\" rel=\"attachment wp-att-266\"><\/a><\/p>\n<div id=\"attachment_267\" style=\"width: 760px\" class=\"wp-caption alignnone\"><a href=\"http:\/\/zachbrogan.com\/byu-iot-lab\/hvac-controller\/attachment\/img_2336-2\/\" rel=\"attachment wp-att-267\"><img aria-describedby=\"caption-attachment-267\" loading=\"lazy\" src=\"http:\/\/zachbrogan.com\/wp-content\/uploads\/2017\/09\/IMG_2336-1-768x1024.jpg\" alt=\"\" width=\"750\" height=\"1000\" class=\"wp-image-267 size-large\" srcset=\"https:\/\/zachbrogan.com\/wp-content\/uploads\/2017\/09\/IMG_2336-1-768x1024.jpg 768w, https:\/\/zachbrogan.com\/wp-content\/uploads\/2017\/09\/IMG_2336-1-225x300.jpg 225w\" sizes=\"(max-width: 750px) 100vw, 750px\" \/><\/a><p id=\"caption-attachment-267\" class=\"wp-caption-text\">HVAC Controller Design on Breadboard<\/p><\/div>\n<p><del>I will add a full schematic for the hardware at some point.<\/del> Eventually, the esp + relays + power chip + terminal blocks will have a custom PCB fabricated, as well as a 3D printed housing.<\/p>\n<div id=\"attachment_282\" style=\"width: 760px\" class=\"wp-caption alignnone\"><a href=\"http:\/\/zachbrogan.com\/byu-iot-lab\/hvac-controller\/attachment\/img_2434\/\" rel=\"attachment wp-att-282\"><img aria-describedby=\"caption-attachment-282\" loading=\"lazy\" src=\"http:\/\/zachbrogan.com\/wp-content\/uploads\/2017\/09\/IMG_2434-1024x768.jpg\" alt=\"\" width=\"750\" height=\"563\" class=\"size-large wp-image-282\" srcset=\"https:\/\/zachbrogan.com\/wp-content\/uploads\/2017\/09\/IMG_2434-1024x768.jpg 1024w, https:\/\/zachbrogan.com\/wp-content\/uploads\/2017\/09\/IMG_2434-300x225.jpg 300w, https:\/\/zachbrogan.com\/wp-content\/uploads\/2017\/09\/IMG_2434-768x576.jpg 768w\" sizes=\"(max-width: 750px) 100vw, 750px\" \/><\/a><p id=\"caption-attachment-282\" class=\"wp-caption-text\">Schematic of HVAC controller (hand drawn)<\/p><\/div>\n<h4>Test Hardware<\/h4>\n<p>In order to test the design, Dr. Flanagan recommended that I create test hardware to integrate with the hvac design. This is because it isn&#8217;t practical to bring a full heating system into the office. To represent a heater, I created a test rig with a heater transformer, a heater contactor, and a light bulb fixture to represent the heater itself.<\/p>\n<div id=\"attachment_270\" style=\"width: 760px\" class=\"wp-caption alignnone\"><a href=\"http:\/\/zachbrogan.com\/byu-iot-lab\/hvac-controller\/attachment\/img_2338-2\/\" rel=\"attachment wp-att-270\"><img aria-describedby=\"caption-attachment-270\" loading=\"lazy\" src=\"http:\/\/zachbrogan.com\/wp-content\/uploads\/2017\/09\/IMG_2338-1-768x1024.jpg\" alt=\"\" width=\"750\" height=\"1000\" class=\"wp-image-270 size-large\" srcset=\"https:\/\/zachbrogan.com\/wp-content\/uploads\/2017\/09\/IMG_2338-1-768x1024.jpg 768w, https:\/\/zachbrogan.com\/wp-content\/uploads\/2017\/09\/IMG_2338-1-225x300.jpg 225w\" sizes=\"(max-width: 750px) 100vw, 750px\" \/><\/a><p id=\"caption-attachment-270\" class=\"wp-caption-text\">Test Rig for Representing Heater<\/p><\/div>\n<p>Future posts will detail the hvac software I wrote for the esp8266, the hvac web api I created using AWS, as well as other parts of the full thermostat system.<\/p>\n","protected":false},"excerpt":{"rendered":"<p>Part of a Better IoT Thermostat Summary My research has involved building a wifi-controlled HVAC\u00a0(heating, ventilation, and air conditioning) controller with a web API. This facilitates the creation of a practical and affordable IoT thermostat. Hardware: An ESP8266,\u00a03 solid-state relays, power source, terminal blocks Software: Arduino (C++) Web API: AWS [&hellip;]<\/p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[8],"tags":[19,20,18,12,16,13,11,14,15],"_links":{"self":[{"href":"https:\/\/zachbrogan.com\/wp-json\/wp\/v2\/posts\/229"}],"collection":[{"href":"https:\/\/zachbrogan.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/zachbrogan.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/zachbrogan.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/zachbrogan.com\/wp-json\/wp\/v2\/comments?post=229"}],"version-history":[{"count":31,"href":"https:\/\/zachbrogan.com\/wp-json\/wp\/v2\/posts\/229\/revisions"}],"predecessor-version":[{"id":291,"href":"https:\/\/zachbrogan.com\/wp-json\/wp\/v2\/posts\/229\/revisions\/291"}],"wp:attachment":[{"href":"https:\/\/zachbrogan.com\/wp-json\/wp\/v2\/media?parent=229"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/zachbrogan.com\/wp-json\/wp\/v2\/categories?post=229"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/zachbrogan.com\/wp-json\/wp\/v2\/tags?post=229"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}